9. HTTP Method와 각각이 사용되는 경우에 대해 설명해주세요.
HTTP메소드는 클라이언트가 서버에게 사용자 요청의 목적을 알리는 '수단'입니다.

종류		기능
GET		데이터 조회
POST		요청 데이터 처리(보통 데이터 등록에 사용)
PUT		데이터 변경(해당 데이터가 없으면 생성)
PATCH		일부 데이터만 변경
DELETE		데이터 삭제


10. GET과 POST의 차이에 대해 설명해주세요.
GET은 데이터를 조회하기 위해 사용되는 방식으로 데이터를 헤더에 추가하여 전송하는 방식입니다.
URL에 데이터가 노출되므로 보안적으로 중요한 데이터를 포함해서는 안됩니다.

POST는 데이터를 추가 또는 수정하기 위해 사용되는 방식으로 데이터를 바디에 추가하여
전송하는 방식입니다. 완전히 안전하다는 것은 아니지만 URL에 데이터가 노출되지 않아
GET보다는 안전합니다.

처리방식		GET방식				POST방식
URL에 데이터 노출 여부	O				X
URL 예시		http://localhost:8080/boardLi	http://localhost:8080/addBoard
			st?name=제목&contents=내용	
데이터의 위치		Header(헤더)			Body(바디)
캐싱 가능 여부		O				X
멱등성 여부		O				X


11. 세션 기반 인증과 토큰 기반 인증의 차이에 대해 설명해주세요.
세션 기반 인증은 클라이언트로부터 요청을 받으면 클라이언트의 상태 정보를 저장하므로
Stateful한 구조를 가지고, 토큰 기반 인증은 상태 정보를 서버에 저장하지 않으므로
Stateless한 구조를 가집니다.


12. 그렇다면 Stateful한 세션 기반의 인증 방식을 사용하게 된다면 어떠한 단점이 있을까요?
1. 서버에 세션을 저장하기 때문에 사용자가 증가하면 서버에 과부하를 줄 수 있어
확장성이 낮습니다.
2. 해커가 훔친 쿠키를 이용해 요청을 보내면 서버는 올바른 사용자가 보낸 요청인지
알 수 없습니다. (세션 하이 재킹 공격)


13. 그렇다면 세션 기반 인증과 토큰 기반 인증은 각각 어느 경우에 적합한가요?
단일 도메인이라면 세션 기반 인증을 사용하고, 아니라면 토큰 기반 인증을 사용하는 것이
적합하다고 생각합니다. 왜냐하면 세션을 관리할 때 사용되는 쿠키는 단일 도메인 및
서브 도메인에서만 작동되도록 설계되어 있기 때문에 여러 도메인에서 관리하는 것은
어렵습니다. (CORS 문제)


14. JWT 토큰에 대해 설명해주세요.
JWT는 JSON 포맷을 이용하는 Claim 기반의 웹 토큰이며, 토큰 자체를 정보로 사용하는
Self-Contained 방식으로 정보를 안전하게 전달합니다.
JWT는 헤더(Header), 내용(Payload), 서명(Signature)로 구성되며 각 파트를 점(.)으로 구분합니다.

헤더(Header) : 토큰의 타입과 해시 암호화 알고리즘(방식지정)으로 이루어져 있습니다.
내용(Payload) : 토큰에 사용자가 담고자 하는 정보를 담습니다. 내용에는 Claim이 담겨있고,
JSON(Key/Value)형태의 한 쌍으로 이루어져 있습니다.
서명(Singature) : 토큰을 인코딩하거나 유효성을 검증할 때 사용하는 고유한 암호화 코드입니다.
헤더와 내용의 값을 인코딩합니다.


15. Connection Timeout과 Read Timeout의 차이에 대해 설명해주세요.
서버 자체에 클라이언트가 어떤 사유로 접근을 실패했을 시 적용되는 것이 Connection Timeout입니다.
즉, 접근을 시도하는 시간 제한이 Connection Timeout 되는 것을 말합니다.

클라이언트가 서버에 접속을 성공했으나 서버가 로직을 수행하는 시간이 너무 길어
제대로 응답을 못 준 상태에서 클라이언트가 연결을 해제하는 것이 Read Timeout입니다.
이 경우는 클라이언트는 해당 상황을 오류로 인지하고, 서버는 계속 로직을 수행하고 있어
성공으로 인지해 양 사이드간 싱크가 맞지 않아 문제가 발생할 확률이 높습니다.